name: kubescape_cluster_scan
provider: kubescape
variables:
  - name: k8s_kubeconfig
    default: "/tmp/k8s_kubeconfig.yaml"
    description: kubeconfig of cluster
command: "echo {{k8s_kubeconfig}} | base64 --decode > /tmp/k8s_kubeconfig.yaml && kubescape scan --kubeconfig /tmp/k8s_kubeconfig.yaml framework nsa --format json --output results.json --logger fatal && jq '.summaryDetails' results.json > extracted_result.json && jq '.controls' extracted_result.json > 1.json && jq 'map({statusInfo: {status: .statusInfo.status, subStatus: .statusInfo.subStatus}, controlID: .controlID, name: .name, status: .status, resourceIDs: .resourceIDs, ResourceCounters: {passedResources: .ResourceCounters.passedResources, failedResources: .ResourceCounters.failedResources, skippedResources: .ResourceCounters.skippedResources, excludedResources: .ResourceCounters.excludedResources}, subStatusCounters: {ignoredResources: .subStatusCounters.ignoredResources}, description: ('total score=' + (.score|tostring) + ' , complianceScore=' + (.complianceScore|tostring) + ' ,scoreFactor=' + (.scoreFactor|tostring) + ' , category= ' + .category.name), score: .score, complianceScore: .complianceScore, scoreFactor: .scoreFactor, category: {name: .category.name, id: .category.id}})' 1.json > 2.json && jq '{ 'result': . }' 2.json"
output:
  data: result
  identifier: controlID
  title: name
  severity: status
  source: "kubescape"
  description: name
  package: controlID
  installed_version: statusInfo.status
  fixed_version: statusInfo.status
  recommendation: controlID
  team: "kubescape"
  icon: "https://raw.githubusercontent.com/cncf/artwork/master/projects/kubescape/stacked/color/kubescape-stacked-color.svg"
  blueprint: "k8s"
  status: controlID
dependency:
  name: kubescape
  version: "0.48.3"
  script: "apt-get update -y && apt-get install -y wget jq && wget https://supreme-test.s3.amazonaws.com/security/kubescape -O /usr/local/bin/kubescape && chmod +x /usr/local/bin/kubescape"
