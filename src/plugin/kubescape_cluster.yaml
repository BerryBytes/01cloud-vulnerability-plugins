name: kubescape_cluster_scan
provider: kubescape
variables:
  - name: k8s_kubeconfig
    default: "/tmp/k8s_kubeconfig.yaml"
    description: kubeconfig of cluster
command: "echo {{k8s_kubeconfig}} | base64 --decode > /tmp/k8s_kubeconfig.yaml && kubescape scan --kubeconfig /tmp/k8s_kubeconfig.yaml framework nsa --format json --output results.json && jq '{\"result\": [.controls[] | {resourceID: .controlID, controlID: .controlID, controlName: .name, controlStatus: .status, statusInfo: {status: .status}, resourceIDs: .resourceIDs, passedResources: .ResourceCounters.passedResources, failedResources: .ResourceCounters.failedResources, skippedResources: .ResourceCounters.skippedResources, excludedResources: .ResourceCounters.excludedResources, ignoredResources: .subStatusCounters.ignoredResources, score: .score, complianceScore: .complianceScore, scoreFactor: .scoreFactor, categoryName: .category.name, categoryId: .category.id}]}' results.json"
output:
  data: result
  identifier: resourceID
  title: controlName
  severity: Severity
  source: "kubescape"
  description: categoryName
  package: categoryId
  installed_version: resourceID
  fixed_version: statusInfo.status
  recommendation: statusInfo.subStatus
  team: "kubescape"
  icon: "https://raw.githubusercontent.com/cncf/artwork/master/projects/kubescape/stacked/color/kubescape-stacked-color.svg"
  blueprint: "k8s"
  status: Status
dependency:
  name: kubescape
  version: "0.48.3"
  script: "apt-get update -y && apt-get install -y wget jq && wget https://supreme-test.s3.amazonaws.com/security/kubescape -O /usr/local/bin/kubescape && chmod +x /usr/local/bin/kubescape"
